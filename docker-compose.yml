version: '3.8'

services:
  # Ollama LLM provider
  ollama: 
    build:
      context: ./Backend/ollama 
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:11434"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Qdrant Vector Store
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333" # Qdrant HTTP/gRPC API
      - "6334:6334" # Qdrant metrics/dashboard
    volumes:
      - qdrant_data:/qdrant/storage
    restart: always

  # RabbitMQ Message Broker
  rabbitmq: # <--- NEW SERVICE
    image: rabbitmq:3-management-alpine # Lightweight image with management UI
    hostname: rabbitmq # Important for internal Docker network resolution
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Management UI port (http://localhost:15672, guest/guest)
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq # Persist RabbitMQ data
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest # Change in production!

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
    volumes: 
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  # Orchestrator
  orchestrator:
    build:
      context: ./Backend
      dockerfile: orchestrator/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OLLAMA_API_URL=${OLLAMA_API_URL}
      - QDRANT_API_URL=${QDRANT_API_URL}
      - RABBITMQ_HOST=rabbitmq # <--- NEW ENV VAR for orchestrator
    depends_on:
      - ollama
      - qdrant
      - rabbitmq
      - db



  # Example Agent: Summarization Agent
  summarization_agent:
    build:
      context: .
      dockerfile: Dockerfile.summarization_agent
    environment:
      - OLLAMA_API_URL=${OLLAMA_API_URL}
      - RABBITMQ_HOST=rabbitmq # <--- NEW ENV VAR for agent
      - AGENT_NAME=summarization_agent # Agent needs to know its name for queueing
    ports:
      - "8002:8002" # Only needed if you want to expose its API directly, not for orchestrator comms
    depends_on:
      - ollama
      - rabbitmq

volumes:
  ollama_data:
  qdrant_data:
  rabbitmq_data:
  postgres_data: